{"version":3,"sources":["assets/icons/contact.svg","assets/icons/home.svg","assets/icons/study.svg","components/App/index.js","components/App/App.js","components/Study/Study.js","components/Study/index.js","components/ContactMe/index.js","components/ContactMe/ContactMe.js","components/Drawer/index.js","components/Drawer/Drawer.js","components/Component/index.js","components/Component/Component.js","components/Home/index.js","components/Home/Home.js","components/Main/index.js","components/Main/Main.js","components/NotFound/index.js","components/NotFound/NotFound.js","components/Study/Components/ReactJS/index.js","components/Study/Components/ReactJS/ReactJS.js","components/Router/index.js","components/Router/Router.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","react_default","a","createElement","className","components_Router","Component","chapters","boxContent","url","Study","props","study","map","_ref","index","components_Component","key","classNameBox","classNameContent","concat","content","ContactMe","Drawer","NavLink","to","src","HomeSVG","alt","StudySVG","ContactSVG","Link","Home","Main","children","id","NotFound","ReactJS","Router","Fragment","BrowserRouter","components_Drawer","components_Main","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.65ae3ec8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/contact.901dc299.svg\";","module.exports = __webpack_public_path__ + \"static/media/home.e0c7c3be.svg\";","module.exports = __webpack_public_path__ + \"static/media/study.38649ecd.svg\";","import App from './App'\r\n\r\nexport default App\r\n","import React, { Component } from 'react';\r\nimport { Router } from '../'\r\n\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Router />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Component } from '..'\r\n\r\nconst chapters = [\r\n  {boxContent: \"Chapter: 1\", url: \"/react-one\"},\r\n  {boxContent: \"Chapter: 2\", url: \"/react-two\"},\r\n  {boxContent: \"Chapter: 3\", url: \"/react-three\"},\r\n  {boxContent: \"Chapter: 4\", url: \"/react-foor\"},\r\n  {boxContent: \"Chapter: 5\", url: \"/react-five\"},\r\n  {boxContent: \"Chapter: 6\", url: \"/react-six\"}\r\n]\r\n\r\nconst Study = (props) => {\r\n  const study = (\r\n    chapters.map(({ boxContent, url }, index) =>\r\n      <Component\r\n        key={boxContent}\r\n        classNameBox={\"item item--\" + (index + 1)}\r\n        classNameContent={`item--${index + 1}__content`}\r\n        content={boxContent}\r\n        url={url}\r\n      />)\r\n  )\r\n\r\n  return (\r\n    <div className=\"study\">\r\n      <div className=\"grid\">\r\n        <div className=\"grid-layout\">\r\n          {study}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Study\r\n","import Study from './Study'\r\n\r\nexport default Study\r\n","import ContactMe from './ContactMe'\r\n\r\nexport default ContactMe\r\n","import React from 'react'\r\n\r\nconst ContactMe = () => (\r\n  <div className=\"contact\">\r\n    Contact Me Component\r\n  </div>\r\n)\r\n\r\nexport default ContactMe\r\n","import Drawer from './Drawer'\r\n\r\nexport default Drawer\r\n","import React, { Component } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { HomeSVG, StudySVG, ContactSVG } from '../../assets/icons'\r\n\r\nexport default class Drawer extends Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"drawer\">\r\n        <nav className=\"nav-box\">\r\n          <ul className=\"list-items\">\r\n            <li className=\"list-item\">\r\n              <NavLink to=\"/\">\r\n                <img src={HomeSVG} alt=\"\" className=\"home-svg\"/>\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"list-item\">\r\n              <NavLink to=\"/study\">\r\n                <img src={StudySVG} alt=\"\" className=\"study-svg\"/>\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"list-item\">\r\n              <NavLink to=\"/contact\">\r\n                <img src={ContactSVG} alt=\"\" className=\"contact-svg\"/>\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import Component from './Component'\r\n\r\nexport default Component\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst Component = ({ classNameBox, classNameContent, content, url }) => {\r\n\r\n  return (\r\n    <div className={classNameBox}>\r\n      <div className={`${classNameContent}`}>\r\n        <Link to={`/study${url}`}>{content}</Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Component\r\n","import Home from './Home'\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\nconst Home = () => (\r\n  <div className=\"home\">\r\n    this is Home Yo  \r\n  </div>\r\n)\r\n\r\nexport default Home\r\n","import Main from './Main'\r\n\r\nexport default Main\r\n","import React from 'react'\r\n\r\nconst Main = ({ children }) => <main id=\"main\" className=\"main\">{ children }</main>\r\n\r\nexport default Main\r\n","import NotFound from './NotFound'\r\n\r\nexport default NotFound\r\n","import React from 'react'\r\n\r\nconst NotFound = () => (\r\n  <div className=\"not-found\">\r\n    4O4\r\n  </div>\r\n)\r\n\r\nexport default NotFound\r\n","import ReactJS from './ReactJS'\r\n\r\nexport default ReactJS\r\n","import React from 'react'\r\n\r\nconst ReactJS = () => (\r\n  <div className=\"react react-one\">\r\n    <h1>This is First Chapter of ReactJS</h1>\r\n  </div>\r\n)\r\n\r\nexport default ReactJS\r\n","import Router from './Router'\r\n\r\nexport default Router\r\n","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport { Main, Drawer, Home, Study, ContactMe, NotFound } from '../'\r\nimport { ReactJS } from '../Study/Components';\r\n\r\nconst Router = () => (\r\n  <>\r\n    <BrowserRouter>\r\n      <>\r\n        <Drawer />\r\n        <Main>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/study\" component={Study} />\r\n            <Route exact path=\"/study/react-one\" component={ReactJS} />\r\n            <Route exact path=\"/study/react-two\" component={ReactJS} />\r\n            <Route exact path=\"/study/react-three\" component={ReactJS} />\r\n            <Route exact path=\"/study/react-foor\" component={ReactJS} />\r\n            <Route exact path=\"/study/react-five\" component={ReactJS} />\r\n            <Route exact path=\"/study/react-six\" component={ReactJS} />\r\n            <Route exact path=\"/contact\" component={ContactMe} />\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </Main>\r\n      </>\r\n    </BrowserRouter>\r\n  </>\r\n)\r\n\r\n\r\n    export default Router\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components'\nimport './styles/index.css'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.unregister()\n"],"sourceRoot":""}